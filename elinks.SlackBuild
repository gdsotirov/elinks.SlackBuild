#!/bin/sh
#
# Slackware build script for ELinks
# Copyright (C) 2016 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: elinks.SlackBuild,v 1.2 2016/10/25 18:09:14 gsotirov Exp $
#

. ../../slack-package.conf

NAME=elinks
VERSION='0.12pre6'
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Get, backup and fix source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.?z* || exit 3
cd $SRC
fix_source

if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
./autogen.sh || exit 50
# Additional include flags for Lua
CFLAGS="$SLKCFLAGS -I/usr/include/lua/5.1" \
CPPFLAGS="$SLKCFLAGS -I/usr/include/lua/5.1" \
./configure --build=${ARCH}-slackware-linux \
            --host=${ARCH}-slackware-linux \
            --prefix=/usr \
            --mandir=/usr/man \
            --enable-largefile \
            --enable-bookmarks \
            --enable-xbel \
            --enable-nls \
            --enable-cookies \
            --enable-formhist \
            --enable-globhist \
            --enable-mailcap \
            --enable-mimetypes \
            --enable-ipv6 \
            --enable-bittorrent \
            --enable-data \
            --enable-uri-rewrite \
            --enable-cgi \
            --enable-finger \
            --enable-ftp \
            --enable-gopher \
            --enable-nntp \
            --enable-smb \
            --enable-mouse \
            --enable-88-colors \
            --enable-256-colors \
            --enable-true-color \
            --enable-exmode \
            --enable-leds \
            --enable-marks \
            --enable-css \
            --enable-html-highlight \
            --enable-backtrace \
            --enable-utf-8 \
            --with-gpm \
            --with-zlib \
            --with-bzlib \
            --with-idn \
            --with-gc \
            --with-guile \
            --with-perl \
            --with-python \
            --with-lua \
            --with-ruby \
            --with-gnutls \
            --with-openssl \
            --with-x \
            --with-libiconv || exit 5

#           --sable-sm-scripting # requires SpiderMonkey
#           --with-lzma          # many compilation errors
#           --with-gssapi        # no kerberos

# Build & install
make V=1 -j4 || exit 6
make V=1 DESTDIR=$PKG install || exit 7

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin  )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $SBDIR
install -m 644 $CWD/slack-desc          $SBDIR/slack-desc
install -m 644 $CWD/slack-required      $SBDIR/slack-required
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  install -m 644 $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Assemble
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

